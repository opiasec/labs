package database

import (
	"fmt"
	"time"

	"github.com/google/uuid"
	"gorm.io/gorm"
)

type Vulnerability struct {
	ID             uuid.UUID      `json:"id" db:"id" gorm:"type:uuid;primaryKey"`
	Name           string         `json:"name" db:"name" gorm:"unique;not null"`
	OwaspReference string         `json:"owaspReference" db:"owasp_reference"`
	Description    string         `json:"description" db:"description"`
	CreatedAt      time.Time      `json:"-" db:"created_at"`
	UpdatedAt      time.Time      `json:"-" db:"updated_at"`
	DeletedAt      gorm.DeletedAt `json:"-" db:"deleted_at"`

	// Relationships
	Labs []Lab `json:"-" gorm:"many2many:lab_vulnerabilities;"`
}

func (db *Database) GetPossiblesVulnerabilities() ([]Vulnerability, error) {
	var vulnerabilities []Vulnerability
	if err := db.Conn.Model(&Vulnerability{}).
		Find(&vulnerabilities).Error; err != nil {
		return nil, fmt.Errorf("failed to get possible vulnerabilities: %w", err)
	}
	return vulnerabilities, nil
}
