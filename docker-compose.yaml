services:
  bff:
    build: 
      context: back-end/
      dockerfile: ./deployment/Dockerfile
    ports:
      - 8080:8080
    environment:
      - AUTH_PASSWORD_ENABLED
      - AUTH_JWT_SECRET
      - ROOT_PASSWORD
      - DB_POSTGRES_URL
      - LAB_CLUSTER_BASE_URL
      - REDIS_ADDR
      - REDIS_PASSWORD
      - REDIS_DB
      - LAB_IDE_BASE_URL
      - WEBHOOK_SECRET_TOKEN
      - TLS_ENABLED
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      labs-net:
        aliases:
          - api.labs.opiasec.com
  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --notify-keyspace-events Ex
    networks:
      - labs-net
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./back-end/deployment/database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - labs-net
  
  cluster-api:
    build:
      context: api/
      dockerfile: ./deployment/Dockerfile
    ports:
      - 8084:8084
    environment:
      - MONGODB_URI
      - MONGODB_DATABASE
      - PORT
      - LAB_BASE_URL
      - WEBHOOK_ENABLED
      - WEBHOOK_BASE_URL
      - WEBHOOK_SECRET_TOKEN
      - KUBECONFIG_BASE64
      - GITHUB_INIT_CONTAINER_USERNAME
      - GITHUB_INIT_CONTAINER_PAT
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - labs-net
  mongodb:
    image: mongo
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    ports:
      - "27017:27017"
    volumes:
      - db-data:/data/db
      - ./api/deployment/mongodb/init:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    networks:
      - labs-net
volumes:
  redis_data:
  db-data:
  postgres_data:

networks:
  labs-net:
